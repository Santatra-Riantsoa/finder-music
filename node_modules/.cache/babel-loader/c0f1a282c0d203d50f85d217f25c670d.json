{"ast":null,"code":"var _jsxFileName = \"/Users/santatriniainariantsoaramanampamonjy/Documents/Etudes/Projet/buffa/finder-music/src/components/Home/Song/Song.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    marginBottom: '15px'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    width: 151\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  playIcon: {\n    height: 38,\n    width: 38\n  },\n  songRoot: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst Song = props => {\n  var _props$album;\n\n  const [currentSong, setCurrentSong] = useState({\n    song: null,\n    isPlayed: false\n  });\n  const [audio, setAudio] = useState(new Audio(\"\"));\n  const classes = useStyles();\n  const theme = useTheme();\n  useEffect(() => {\n    audio.pause();\n  }, [audio], [currentSong]);\n\n  const playSong = song => {\n    setCurrentSong(state => {\n      return {\n        song: song.song,\n        isPlayed: !state.isPlayed\n      };\n    });\n    audio.pause();\n    setAudio(new Audio(song.song.preview));\n\n    if ((currentSong === null || currentSong === void 0 ? void 0 : currentSong._id) === song._id) {\n      console.log(currentSong.isPlayed);\n      currentSong.isPlayed ? audio.play() : audio.pause();\n    }\n  };\n\n  const displayPlay = song => {\n    var _currentSong$song;\n\n    let isPlayed = false;\n\n    if (song._id === (currentSong === null || currentSong === void 0 ? void 0 : (_currentSong$song = currentSong.song) === null || _currentSong$song === void 0 ? void 0 : _currentSong$song._id)) {\n      let currentStatus = { ...currentSong\n      };\n      isPlayed = !currentStatus.iscPlayed;\n    }\n\n    if (!isPlayed) {\n      return React.createElement(PlayArrowIcon, {\n        className: classes.playIcon,\n        onClick: () => playSong({\n          song: song,\n          isPlayed: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(PauseIcon, {\n        className: classes.playIcon,\n        onClick: () => playSong({\n          song: song,\n          isPlayed: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  };\n\n  const songPlaceHolder = (_props$album = props.album) === null || _props$album === void 0 ? void 0 : _props$album.songs.map((song, index) => {\n    var _props$album$cover, _props$album2;\n\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.cover,\n      image: (_props$album$cover = props.album.cover) === null || _props$album$cover === void 0 ? void 0 : _props$album$cover.medium,\n      title: \"Live from space album cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, song.title), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Album : \", (_props$album2 = props.album) === null || _props$album2 === void 0 ? void 0 : _props$album2.name)), React.createElement(\"div\", {\n      className: classes.controls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"play/pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, displayPlay(song))))));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, songPlaceHolder);\n};\n\nexport default Song;","map":{"version":3,"sources":["/Users/santatriniainariantsoaramanampamonjy/Documents/Etudes/Projet/buffa/finder-music/src/components/Home/Song/Song.js"],"names":["React","useState","useEffect","makeStyles","useTheme","Card","CardContent","CardMedia","IconButton","Typography","PlayArrowIcon","PauseIcon","useStyles","theme","root","display","marginBottom","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","songRoot","maxWidth","backgroundColor","palette","background","paper","Song","props","currentSong","setCurrentSong","song","isPlayed","audio","setAudio","Audio","classes","pause","playSong","state","preview","_id","console","log","play","displayPlay","currentStatus","iscPlayed","songPlaceHolder","album","songs","map","index","medium","title","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        marginBottom: '15px'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 151,\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    }, songRoot: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nconst Song = (props) => {\n    const [currentSong, setCurrentSong] = useState({ song: null, isPlayed: false });\n    const [audio, setAudio] = useState(new Audio(\"\"));\n    const classes = useStyles();\n    const theme = useTheme();\n    useEffect(() => {\n        audio.pause();\n    },\n        [audio], [currentSong]\n    );\n    const playSong = (song) => {\n        setCurrentSong(state => {\n            return { song: song.song, isPlayed: !state.isPlayed }\n        });\n        audio.pause();\n\n        setAudio(new Audio(song.song.preview));\n        if (currentSong?._id === song._id) {\n            console.log(currentSong.isPlayed);\n            currentSong.isPlayed ? audio.play() : audio.pause();\n        }\n\n    }\n    const displayPlay = (song) => {\n        let isPlayed = false;\n\n        if (song._id === currentSong?.song?._id) {\n            let currentStatus = { ...currentSong };\n            isPlayed = !currentStatus.iscPlayed;\n        }\n        if (!isPlayed) {\n            return (\n                <PlayArrowIcon className={classes.playIcon} onClick={() => playSong({ song: song, isPlayed: true })} />\n\n            )\n        }\n        else {\n            return (<PauseIcon className={classes.playIcon} onClick={() => playSong({ song: song, isPlayed: false })} />)\n\n        }\n    }\n    const songPlaceHolder = props.album?.songs.map((song, index) => (\n\n        <div key={index}>\n            <Card className={classes.root}>\n                <CardMedia\n                    className={classes.cover}\n                    image={props.album.cover?.medium}\n                    title=\"Live from space album cover\"\n                />\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h5\" variant=\"h5\">\n                            {song.title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            Album : {props.album?.name}\n                        </Typography>\n                    </CardContent>\n                    <div className={classes.controls}>\n\n                        <IconButton aria-label=\"play/pause\">\n                            {displayPlay(song)}\n                        </IconButton>\n\n                    </div>\n                </div>\n\n            </Card>\n\n        </div>\n    ));\n    return (\n\n        <div>\n            {songPlaceHolder}\n\n        </div>\n\n    )\n\n}\nexport default Song;"]},"metadata":{},"sourceType":"module"}