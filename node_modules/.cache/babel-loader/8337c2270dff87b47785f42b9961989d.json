{"ast":null,"code":"var _jsxFileName = \"/Users/santatriniainariantsoaramanampamonjy/Documents/Etudes/Projet/buffa/finder-music/src/components/Detail/Detail.js\";\nimport { Avatar, Chip, Divider, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport AmpStoriesIcon from '@material-ui/icons/AmpStories';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonIcon from '@material-ui/icons/Person';\nimport React, { Component } from 'react';\nimport metallica from '../../data/mettalica';\nimport \"./Detail.css\";\nexport default class Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.id = this.props.match.params.id;\n    this.state = {\n      artistInfo: metallica\n    };\n  }\n\n  componentDidMount() {\n    this.getDetailFromServer();\n  }\n\n  getDetailFromServer() {\n    /*get(\"https://wasabi.i3s.unice.fr/api/v1/artist/id/\"+this.id).then((result) => {\n        console.log(result);\n        this.setState({artistInfo:result});\n    }).catch((err) => {\n        console.log(err);\n    });*/\n  }\n\n  render() {\n    var _artistInfo$picture, _artistInfo$location, _artistInfo$location2;\n\n    const {\n      artistInfo\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"artist-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"link-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, artistInfo.name)), React.createElement(\"div\", {\n      className: \"artist-info-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: (_artistInfo$picture = artistInfo.picture) === null || _artistInfo$picture === void 0 ? void 0 : _artistInfo$picture.medium,\n      alt: \"artist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"artist-resume\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, artistInfo.abstract)), React.createElement(\"div\", {\n      className: \"artist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, artistInfo.gender && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      className: \"artist-info-text\",\n      primary: \"Gender\",\n      secondary: artistInfo.gender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(AmpStoriesIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      className: \"artist-info-text\",\n      primary: \"Type\",\n      secondary: artistInfo.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(LanguageIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      className: \"artist-info-text\",\n      primary: \"Location\",\n      secondary: ((_artistInfo$location = artistInfo.location) === null || _artistInfo$location === void 0 ? void 0 : _artistInfo$location.city) + \" ,\" + ((_artistInfo$location2 = artistInfo.location) === null || _artistInfo$location2 === void 0 ? void 0 : _artistInfo$location2.country),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(PeopleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      className: \"artist-info-text\",\n      primary: \"Deezer Fan\",\n      secondary: artistInfo.deezerFans,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), artistInfo.members && artistInfo.members.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multilist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Members (\" + artistInfo.members.length + \") :\", \" \")), React.createElement(\"div\", {\n      className: \"multilist-info__chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, artistInfo.members.map((member, index) => {\n      return React.createElement(Chip, {\n        label: member.name + \" (\" + member.instruments[0] + \")\",\n        key: index,\n        className: \"multilist-info__chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), artistInfo.genres && artistInfo.genres.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multilist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Genres (\" + artistInfo.genres.length + \") :\", \" \")), React.createElement(\"div\", {\n      className: \"multilist-info__chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, artistInfo.genres.map((value, index) => {\n      return React.createElement(Chip, {\n        label: value,\n        key: index,\n        className: \"multilist-info__chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), artistInfo.associatedMusicalArtist && artistInfo.associatedMusicalArtist.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multilist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Associated Musical Artist (\" + artistInfo.associatedMusicalArtist.length + \") :\", \" \")), React.createElement(\"div\", {\n      className: \"multilist-info__chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, artistInfo.associatedMusicalArtist.map((value, index) => {\n      return React.createElement(Chip, {\n        label: value,\n        key: index,\n        className: \"multilist-info__chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      });\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), artistInfo.subject && artistInfo.subject.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multilist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Subject (\" + artistInfo.subject.length + \") :\", \" \")), React.createElement(\"div\", {\n      className: \"multilist-info__chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, artistInfo.subject.map((value, index) => {\n      return React.createElement(Chip, {\n        label: value,\n        key: index,\n        className: \"multilist-info__chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      });\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), artistInfo.recordLabel && artistInfo.recordLabel.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multilist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Record Label (\" + artistInfo.recordLabel.length + \") :\", \" \")), React.createElement(\"div\", {\n      className: \"multilist-info__chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, artistInfo.recordLabel.map((value, index) => {\n      return React.createElement(Chip, {\n        label: value,\n        key: index,\n        className: \"multilist-info__chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), artistInfo.nameVariations_fold && artistInfo.nameVariations_fold.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multilist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Name Variation (\" + artistInfo.nameVariations_fold.length + \") :\", \" \")), React.createElement(\"div\", {\n      className: \"multilist-info__chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, artistInfo.nameVariations_fold.map((value, index) => {\n      return React.createElement(Chip, {\n        label: value,\n        key: index,\n        className: \"multilist-info__chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      });\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), artistInfo.labels && artistInfo.labels.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multilist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Labels (\" + artistInfo.labels.length + \") :\", \" \")), React.createElement(\"div\", {\n      className: \"multilist-info__chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, artistInfo.labels.map((value, index) => {\n      return React.createElement(Chip, {\n        label: value,\n        key: index,\n        className: \"multilist-info__chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      });\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), artistInfo.urls && artistInfo.urls.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multilist-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Urls (\" + artistInfo.urls.length + \") :\", \" \")), React.createElement(\"div\", {\n      className: \"multilist-info__chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, artistInfo.urls.map((value, index) => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: value,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, value, \">\"));\n    }))), React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/santatriniainariantsoaramanampamonjy/Documents/Etudes/Projet/buffa/finder-music/src/components/Detail/Detail.js"],"names":["Avatar","Chip","Divider","List","ListItem","ListItemAvatar","ListItemText","Card","CardContent","AmpStoriesIcon","LanguageIcon","PeopleIcon","PersonIcon","React","Component","metallica","Detail","constructor","props","id","match","params","state","artistInfo","componentDidMount","getDetailFromServer","render","name","picture","medium","abstract","gender","type","location","city","country","deezerFans","members","length","map","member","index","instruments","genres","value","associatedMusicalArtist","subject","recordLabel","nameVariations_fold","labels","urls"],"mappings":"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","sourcesContent":["import { Avatar, Chip, Divider, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport AmpStoriesIcon from '@material-ui/icons/AmpStories';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonIcon from '@material-ui/icons/Person';\nimport React, { Component } from 'react';\nimport metallica from '../../data/mettalica';\nimport \"./Detail.css\";\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props);\n        this.id = this.props.match.params.id;\n        this.state = {\n            artistInfo: metallica\n        }\n    }\n\n    componentDidMount() {\n        this.getDetailFromServer();\n    }\n\n    getDetailFromServer() {\n        /*get(\"https://wasabi.i3s.unice.fr/api/v1/artist/id/\"+this.id).then((result) => {\n            console.log(result);\n            this.setState({artistInfo:result});\n        }).catch((err) => {\n            console.log(err);\n        });*/\n    }\n\n    render() {\n        const {artistInfo} = this.state;\n        return (\n            <div>\n                <Card className=\"card\">\n                    <CardContent className=\"card-content\">\n                        <div className=\"artist-header\">\n                            <div className=\"link-container\">\n                                 <ul>    \n                                    {/* <li><a href={artistInfo.urlWikipedia} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"Wikipedia\" src=\"https://wasabi.i3s.unice.fr/img/wikipedia_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlFacebook} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"Facebook\" src=\"https://wasabi.i3s.unice.fr/img/facebook_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlTwitter} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"Twitter\" src=\"https://wasabi.i3s.unice.fr/img/twitter_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlAmazon} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"Amazon\" src=\"https://wasabi.i3s.unice.fr/img/amazon_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlYouTube} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"Youtube\" src=\"https://wasabi.i3s.unice.fr/img/youtube_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlSpotify} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"Spotify\" src=\"https://wasabi.i3s.unice.fr/img/spotify_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlDeezer} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"Deezer\" src=\"https://wasabi.i3s.unice.fr/img/deezer_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlITunes} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"iTunes\" src=\"https://wasabi.i3s.unice.fr/img/itunes_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlSoundCloud} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"SoundCloud\" src=\"https://wasabi.i3s.unice.fr/img/soundcloud_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlMySpace} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"MySpace\" src=\"https://wasabi.i3s.unice.fr/img/myspace_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlMusicBrainz} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"MusicBrainz\" src=\"https://wasabi.i3s.unice.fr/img/musicbrainz_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlOfficialWebsite} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"OfficialWebsite\" src=\"https://wasabi.i3s.unice.fr/img/website_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlAllmusic} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"AllMusic\" src=\"https://wasabi.i3s.unice.fr/img/allmusic_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlDiscogs} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"Discogs\" src=\"https://wasabi.i3s.unice.fr/img/discogs_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlPureVolume} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"PureVolume\" src=\"https://wasabi.i3s.unice.fr/img/purevolume_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlRateYourMusic} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"RateYourMusic\" src=\"https://wasabi.i3s.unice.fr/img/rateyourmusic_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlLastFm} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"LastFm\" src=\"https://wasabi.i3s.unice.fr/img/lastfm_icon.svg\" /></a></li>\n                                    <li><a href={artistInfo.urlDiscogs} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"DiscoveryHub\" src=\"https://wasabi.i3s.unice.fr/img/discoveryhub_icon.png\" /></a></li>\n                                    <li><a href={artistInfo.urlWikia} target=\"_blank\" rel=\"noopener noreferrer\"><Avatar alt=\"LyricsWikia\" src=\"https://wasabi.i3s.unice.fr/img/lyricswikia_icon.svg\" /></a></li>  */}\n                                 </ul>\n                            </div>\n                            <h2>{artistInfo.name}</h2>\n                        </div>\n                        <div className=\"artist-info-container\">\n                            <div className=\"img-container\">\n                                <img src={artistInfo.picture?.medium} alt=\"artist\" />   \n                            </div>\n                            <div className=\"artist-resume\">\n                            <p>{artistInfo.abstract}</p>\n                            </div>\n                            <div className=\"artist-info\">\n                                <List>\n                                    {\n                                        artistInfo.gender && (\n                                            <React.Fragment>\n                                                <ListItem>\n                                                    <ListItemAvatar>\n                                                        <Avatar>\n                                                            <PersonIcon />\n                                                        </Avatar>\n                                                    </ListItemAvatar>\n                                                    <ListItemText className=\"artist-info-text\" primary=\"Gender\" secondary={artistInfo.gender} />\n                                                </ListItem>\n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </React.Fragment>\n                                        )    \n                                    }\n\n                                    <ListItem>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <AmpStoriesIcon />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText className=\"artist-info-text\"  primary=\"Type\" secondary={artistInfo.type} />\n                                    </ListItem>\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    <ListItem>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <LanguageIcon />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText className=\"artist-info-text\" primary=\"Location\" secondary={artistInfo.location?.city+\" ,\"+artistInfo.location?.country} />\n                                    </ListItem>\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    <ListItem>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <PeopleIcon />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText className=\"artist-info-text\"  primary=\"Deezer Fan\" secondary={artistInfo.deezerFans} />\n                                    </ListItem>\n                                    {\n                                        (artistInfo.members && artistInfo.members.length>0) && (\n                                            <div>\n                                                <div className=\"multilist-info\">\n                                                    <span>{\"Members (\" + artistInfo.members.length + \") :\"} </span>\n                                                </div>\n                                                <div className=\"multilist-info__chips\">\n                                                    {\n                                                        artistInfo.members.map((member,index) => {\n                                                            return(\n                                                                <Chip label={member.name+\" (\"+member.instruments[0]+\")\"} key={index} className=\"multilist-info__chip\" />\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n                                                \n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </div>\n                                        )    \n                                    }\n\n                                    \n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    {\n                                        (artistInfo.genres && artistInfo.genres.length > 0) && (\n                                            <div>\n                                                <div className=\"multilist-info\">\n                                                    <span>{\"Genres (\" + artistInfo.genres.length + \") :\"} </span>\n                                                </div>\n                                                <div className=\"multilist-info__chips\">\n                                                    {\n                                                        artistInfo.genres.map((value, index) => {\n                                                            return (\n                                                                <Chip label={value} key={index} className=\"multilist-info__chip\" />\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n\n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </div>\n                                        )\n                                    }\n\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    {\n                                        (artistInfo.associatedMusicalArtist && artistInfo.associatedMusicalArtist.length>0) && (\n                                            <div>\n                                                <div className=\"multilist-info\">\n                                                    <span>{\"Associated Musical Artist (\" + artistInfo.associatedMusicalArtist.length + \") :\"} </span>\n                                                </div>\n                                                <div className=\"multilist-info__chips\">\n                                                    {\n                                                        artistInfo.associatedMusicalArtist.map((value,index) => {\n                                                            return(\n                                                                <Chip label={value} key={index} className=\"multilist-info__chip\" />\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n                                                \n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </div>\n                                        )    \n                                    }\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    {\n                                        (artistInfo.subject && artistInfo.subject.length>0) && (\n                                            <div>\n                                                <div className=\"multilist-info\">\n                                                    <span>{\"Subject (\" + artistInfo.subject.length + \") :\"} </span>\n                                                </div>\n                                                <div className=\"multilist-info__chips\">\n                                                    {\n                                                        artistInfo.subject.map((value,index) => {\n                                                            return(\n                                                                <Chip label={value} key={index} className=\"multilist-info__chip\" />\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n                                                \n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </div>\n                                        )    \n                                    }\n\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    {\n                                        (artistInfo.recordLabel && artistInfo.recordLabel.length>0) && (\n                                            <div>\n                                                <div className=\"multilist-info\">\n                                                    <span>{\"Record Label (\" + artistInfo.recordLabel.length + \") :\"} </span>\n                                                </div>\n                                                <div className=\"multilist-info__chips\">\n                                                    {\n                                                        artistInfo.recordLabel.map((value,index) => {\n                                                            return(\n                                                                <Chip label={value} key={index} className=\"multilist-info__chip\" />\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n                                                \n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </div>\n                                        )    \n                                    }\n\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    {\n                                        (artistInfo.nameVariations_fold && artistInfo.nameVariations_fold.length>0) && (\n                                            <div>\n                                                <div className=\"multilist-info\">\n                                                    <span>{\"Name Variation (\" + artistInfo.nameVariations_fold.length + \") :\"} </span>\n                                                </div>\n                                                <div className=\"multilist-info__chips\">\n                                                    {\n                                                        artistInfo.nameVariations_fold.map((value,index) => {\n                                                            return(\n                                                                <Chip label={value} key={index} className=\"multilist-info__chip\" />\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n                                                \n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </div>\n                                        )    \n                                    }\n\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    {\n                                        (artistInfo.labels && artistInfo.labels.length>0) && (\n                                            <div>\n                                                <div className=\"multilist-info\">\n                                                    <span>{\"Labels (\" + artistInfo.labels.length + \") :\"} </span>\n                                                </div>\n                                                <div className=\"multilist-info__chips\">\n                                                    {\n                                                        artistInfo.labels.map((value,index) => {\n                                                            return(\n                                                                <Chip label={value} key={index} className=\"multilist-info__chip\" />\n                                                            )\n                                                        })\n                                                    }\n                                                </div>\n                                                \n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </div>\n                                        )    \n                                    }\n\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                    {\n                                        (artistInfo.urls && artistInfo.urls.length>0) && (\n                                            <div>\n                                                <div className=\"multilist-info\">\n                                                    <span>{\"Urls (\" + artistInfo.urls.length + \") :\"} </span>\n                                                </div>\n                                                <div className=\"multilist-info__chips\">\n                                                    <ul>\n                                                        {\n                                                            artistInfo.urls.map((value,index) => {\n                                                                return(\n                                                                <li><a href={value}  target=\"_blank\" rel=\"noopener noreferrer\" >{value}></a></li>\n                                                                )\n                                                            })\n                                                        }\n                                                    </ul>\n                                                </div>\n                                                \n                                                <Divider variant=\"inset\" component=\"li\" />\n                                            </div>\n                                        )    \n                                    }\n\n                                    \n                                </List>\n                            </div>\n                            \n                        </div>\n                    </CardContent>\n                </ Card>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}