{"ast":null,"code":"var _jsxFileName = \"/Users/santatriniainariantsoaramanampamonjy/Documents/Etudes/Projet/buffa/finder-music/src/components/Photos.js\";\nimport React from \"react\";\nimport \"./Photos.css\";\n\nclass Photos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photos: []\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"On va récupérer la photo No : \" + this.idPhoto);\n      let url = \"https://jsonplaceholder.typicode.com/photos\";\n      console.log(\"Appelé avant le premier rendu du composant\"); //this.getDataFromServer(url);\n    };\n\n    this.getDataFromServer = url => {\n      // utiliser fetch pour récupérer les données\n      console.log(\"Getting data from server\");\n      fetch(url).then(response => response.json()).then(reponseJavaScript => {\n        console.log(reponseJavaScript);\n        this.setState({\n          photos: reponseJavaScript\n        });\n      });\n    };\n\n    console.log(\"ID = \" + props.match.params.id);\n    this.idPhoto = props.match.params.id;\n  }\n\n  render() {\n    // todo : afficher les photos qui sont dans le state dans\n    // un tableau, une image pour le thumbnail et la description et le no de l'album\n    const {\n      photos\n    } = this.state;\n    let list = photos.map((el, index) => {\n      //if (index > 20) return;\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: el.thumbnailUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, el.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, el.albumId)); // return <PhotoDetail desc={el}/>\n    }); // todo No 2 à faire plus tard : un composant dédié \"PhotoDetail\" qui affiche l'image\n    // en grand, avec la description dessous (peu importe le style html on arrangera\n    // plus tard)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Composant Photos\"), React.createElement(\"table\", {\n      style: {\n        border: \"2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Image\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"No Album\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, list)));\n  }\n\n}\n\nexport default Photos;","map":{"version":3,"sources":["/Users/santatriniainariantsoaramanampamonjy/Documents/Etudes/Projet/buffa/finder-music/src/components/Photos.js"],"names":["React","Photos","Component","constructor","props","state","photos","componentDidMount","console","log","idPhoto","url","getDataFromServer","fetch","then","response","json","reponseJavaScript","setState","match","params","id","render","list","map","el","index","thumbnailUrl","title","albumId","border"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAMnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SALnBC,KAKmB,GALX;AACJC,MAAAA,MAAM,EAAE;AADJ,KAKW;;AAAA,SAMjBC,iBANiB,GAMG,MAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmC,KAAKC,OAApD;AACF,UAAIC,GAAG,GAAG,6CAAV;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAH0B,CAI1B;AACD,KAXkB;;AAAA,SAYnBG,iBAZmB,GAYCD,GAAG,IAAI;AACzB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAI,MAAAA,KAAK,CAACF,GAAD,CAAL,CACGG,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,iBAAiB,IAAI;AACzBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,iBAAZ;AACA,aAAKC,QAAL,CAAc;AACZZ,UAAAA,MAAM,EAAEW;AADI,SAAd;AAGD,OAPH;AAQD,KAvBkB;;AAEfT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,EAAzC;AACA,SAAKX,OAAL,GAAeN,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACH;;AAqBDC,EAAAA,MAAM,GAAG;AACP;AACA;AAEA,UAAM;AAAEhB,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AAEA,QAAIkB,IAAI,GAAGjB,MAAM,CAACkB,GAAP,CAAW,CAACC,EAAD,EAAKC,KAAL,KAAe;AACnC;AAEA,aACE;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAED,EAAE,CAACE,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,EAAE,CAACG,KAAR,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,EAAE,CAACI,OAAR,CALF,CADF,CAHmC,CAanC;AACD,KAdU,CAAX,CANO,CAsBP;AACA;AACA;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQP,IAAR,CARF,CAFF,CADF;AAeD;;AAvEkC;;AA0ErC,eAAetB,MAAf","sourcesContent":["import React from \"react\";\nimport \"./Photos.css\";\n\nclass Photos extends React.Component {\n  state = {\n      photos: []\n  };\n idPhoto;\n    \n  constructor(props) {\n      super(props);\n      console.log(\"ID = \" + props.match.params.id);\n      this.idPhoto = props.match.params.id;\n  }\n\n    componentDidMount = () => {\n      console.log(\"On va récupérer la photo No : \" + this.idPhoto);\n    let url = \"https://jsonplaceholder.typicode.com/photos\";\n    console.log(\"Appelé avant le premier rendu du composant\");\n    //this.getDataFromServer(url);\n  };\n  getDataFromServer = url => {\n    // utiliser fetch pour récupérer les données\n    console.log(\"Getting data from server\");\n    fetch(url)\n      .then(response => response.json())\n      .then(reponseJavaScript => {\n        console.log(reponseJavaScript);\n        this.setState({\n          photos: reponseJavaScript\n        });\n      });\n  };\n\n  render() {\n    // todo : afficher les photos qui sont dans le state dans\n    // un tableau, une image pour le thumbnail et la description et le no de l'album\n\n    const { photos } = this.state;\n\n    let list = photos.map((el, index) => {\n      //if (index > 20) return;\n\n      return (\n        <tr key={index}>\n          <td>\n            <img src={el.thumbnailUrl} />\n          </td>\n          <td>{el.title}</td>\n          <td>{el.albumId}</td>\n        </tr>\n      );\n\n      // return <PhotoDetail desc={el}/>\n    });\n\n    // todo No 2 à faire plus tard : un composant dédié \"PhotoDetail\" qui affiche l'image\n    // en grand, avec la description dessous (peu importe le style html on arrangera\n    // plus tard)\n    return (\n      <div>\n        <h1>Composant Photos</h1>\n        <table style={{ border: \"2\" }}>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Description</th>\n              <th>No Album</th>\n            </tr>\n          </thead>\n          <tbody>{list}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Photos;\n"]},"metadata":{},"sourceType":"module"}